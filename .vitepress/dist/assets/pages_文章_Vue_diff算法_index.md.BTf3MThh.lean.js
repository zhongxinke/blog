import{_ as i,c as a,a1 as n,o as t}from"./chunks/framework.clinZALv.js";const o=JSON.parse('{"title":"Diff算法","description":"","frontmatter":{},"headers":[],"relativePath":"pages/文章/Vue/diff算法/index.md","filePath":"pages/文章/Vue/diff算法/index.md"}'),l={name:"pages/文章/Vue/diff算法/index.md"};function e(p,s,h,k,d,E){return t(),a("div",null,s[0]||(s[0]=[n(`<h1 id="diff算法" tabindex="-1">Diff算法 <a class="header-anchor" href="#diff算法" aria-label="Permalink to &quot;Diff算法&quot;">​</a></h1><h2 id="虚拟dom" tabindex="-1">虚拟DOM <a class="header-anchor" href="#虚拟dom" aria-label="Permalink to &quot;虚拟DOM&quot;">​</a></h2><p>虚拟DOM实际是JS对象，将一个DOM元素转成JS对象的形式</p><div class="language-vue vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">vue</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;p class=&quot;item&quot;&gt;demo&lt;/p&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>转成：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> Vnode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  tagName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;div&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  props: { class: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;container&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  children: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      tagName: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;p&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      props: { class: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;item&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      text: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;demo&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">};</span></span></code></pre></div><h2 id="算法对比" tabindex="-1">算法对比 <a class="header-anchor" href="#算法对比" aria-label="Permalink to &quot;算法对比&quot;">​</a></h2><p>通过对比新旧虚拟DOM，找到差异使最小化更新视图。本质上就是比较两个JS对象的差异</p><h2 id="vue2算法" tabindex="-1">Vue2算法 <a class="header-anchor" href="#vue2算法" aria-label="Permalink to &quot;Vue2算法&quot;">​</a></h2><ul><li>判断是否同类标签，不是则直接替换</li><li>判断两个节点是否相等，相等则直接返回</li><li>新旧节点包含文本节点，直接使用新的文本替换</li><li>旧节点没有子节点，新节点有子节点，直接添加新节点</li><li>旧节点有子节点，新节点没有，直接删除子节点</li><li>新旧节点都有子节点</li></ul><p><strong>新旧节点都有子节点的情况</strong></p><p>规定在同级做比对，减少比对次数，如图：</p><img src="http://zhongxk.com/blogImg/vue2-diff.png" title="vue2-diff.png" alt="vue2-diff.png" width="700px" style="max-width:none;"><p><strong>首尾指针法</strong></p><p>新旧节点分别有头尾指针，俩俩比较</p>`,15)]))}const g=i(l,[["render",e]]);export{o as __pageData,g as default};
