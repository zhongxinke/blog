import{p as f,v as p,d as x,o as d,c as h,F as M,C as b,N as v,t as k,_ as y,a1 as P,G as S}from"./chunks/framework.clinZALv.js";function C(o){const e=Math.random()*2.6+.5,t=o*e,n=`rgb(${Math.floor(Math.random()*256)}, ${Math.floor(Math.random()*256)}, ${Math.floor(Math.random()*256)})`,a=Math.floor(Math.random()*1e3);return{load(){return new Promise(s=>{setTimeout(()=>{s({height:t,backgroundColor:n})},a)})}}}function q(o,e,t){const n=Math.floor(o/(e+t));return n>0?n:1}function W(o){return o.indexOf(Math.min(...o))}function w(o){const e=f(),{grap:t=20,width:n}=o||{};let a=[];p(()=>{var l;if(!e.value)return;const r=((l=e.value)==null?void 0:l.offsetWidth)??0;s(r)});const s=r=>{a=Array.from({length:q(r,n,t)}).fill(0)};return{containerRef:e,getPosition:(r,l)=>{if(!e.value)return{x:0,y:0};const c=W(a),m=(e.value.offsetWidth-(n*a.length+t*(a.length-1)))/2,g=(n+t)*c+m,_=a[c]+t;return a[c]+=r+t,e.value.style.height=`${Math.max(...a)+t}px`,{left:g,top:_}}}}const u=100,$=x({__name:"index",setup(o){const e=f([]),{getPosition:t,containerRef:n}=w({width:u,grap:10});return p(async()=>{for(let a=0;a<30;a++){const s=C(u),{height:i,backgroundColor:r}=await s.load(),{left:l,top:c}=t(i,a);e.value.push({left:l,top:c,height:i,backgroundColor:r})}}),(a,s)=>(d(),h("div",{class:"container",ref_key:"containerRef",ref:n},[(d(!0),h(M,null,b(e.value,(i,r)=>(d(),h("div",{class:"item",style:v({width:u+"px",height:i.height+"px",backgroundColor:i.backgroundColor,left:i.left+"px",top:i.top+"px"})},k(r),5))),256))],512))}}),J=y($,[["__scopeId","data-v-cebce0d5"]]),D=JSON.parse('{"title":"瀑布流布局","description":"","frontmatter":{},"headers":[],"relativePath":"pages/编程/瀑布流/index.md","filePath":"pages/编程/瀑布流/index.md"}'),N={name:"pages/编程/瀑布流/index.md"},I=Object.assign(N,{setup(o){return(e,t)=>(d(),h("div",null,[t[0]||(t[0]=P('<h1 id="瀑布流布局" tabindex="-1">瀑布流布局 <a class="header-anchor" href="#瀑布流布局" aria-label="Permalink to &quot;瀑布流布局&quot;">​</a></h1><p>瀑布流布局是一种流式布局，它将页面上的内容按从上到下、从左到右的顺序排列，并在页面宽度不足时，自动换行。</p><h2 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-label="Permalink to &quot;实现原理&quot;">​</a></h2><ol><li>首先，将页面上的内容分成若干个小块，每个小块的大小由 CSS 设置。</li><li>然后，将这些小块按照从上到下、从左到右的顺序排列。</li><li>当页面宽度不足时，自动换行。</li><li>当小块的高度超过页面高度时，停止排列，并将剩余的小块放置在下一行。</li></ol><h3 id="js实现瀑布流" tabindex="-1">JS实现瀑布流 <a class="header-anchor" href="#js实现瀑布流" aria-label="Permalink to &quot;JS实现瀑布流&quot;">​</a></h3>',5)),S(J)]))}});export{D as __pageData,I as default};
